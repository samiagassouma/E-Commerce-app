on:
  push:
    branches:
      - main
permissions:
  contents: write 

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      # - name: analyse with sonarqube
      #   uses: SonarSource/sonarqube-scan-action@v6.0.0
      #   with:
      #     args: >
      #       -Dsonar.projectKey=testProject
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

     
      - name: Commit and Push Changes
        run: |
          sed -i "s|gassouma530975/testdeploy:.*|gassouma530975/testdeploy:frontend-0d2246f683627302faa884d656e69966ba8d02eb|" manifests/front.yaml
          sed -i "s|gassouma530975/testdeploy:.*|gassouma530975/testdeploy:backend-0d2246f683627302faa884d656e69966ba8d02eb|" manifests/back.yaml
          # configure user
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          # stage any file changes to be committed
          git add manifests/front.yaml
          git add manifests/back.yaml
          # make commit with staged changes
          git commit -m 'files changed ${{github.sha}}'
          # push the commit back up to source GitHub repository
          git push
